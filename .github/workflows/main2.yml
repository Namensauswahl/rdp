name: CI2

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-2025

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip -DestinationPath $pwd
      
    - name: Verify ngrok File Existence
      run: |
        if (!(Test-Path .\ngrok.exe)) {
          Write-Error "ngrok.exe was not found in the expected path."
        } else {
          Write-Output "ngrok.exe found."
        }

    - name: Auth with ngrok
      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Terminal Services (RDP)
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Set Local User Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Windowspass!" -Force)

    - name: Create Tunnel with ngrok (Background)
      run: |
        $p = Start-Process -FilePath $pwd\ngrok.exe -ArgumentList "tcp 3389" -PassThru -WindowStyle Hidden
        $p.Id | Set-Content ngrok_pid.txt
        Write-Output "ngrok started with PID $($p.Id)."

    - name: Stop ngrok after 5 minutes
      run: |
        Write-Output "Sleeping for 5 minutes before stopping ngrok..."
        Start-Sleep -Seconds 300
        $ngrokPid = Get-Content ngrok_pid.txt
        if ($ngrokPid) {
          Stop-Process -Id $ngrokPid -Force
          Write-Output "ngrok process $ngrokPid terminated after 5 minutes."
        } else {
          Write-Warning "Could not read ngrok PID, nothing to stop."
        }

    - name: Output ngrok Logs (for debugging)
      run: |
        if (Test-Path ngrok.log) {
          Get-Content ngrok.log -Tail 100
        } else {
          Write-Output "ngrok.log not found."
        }
